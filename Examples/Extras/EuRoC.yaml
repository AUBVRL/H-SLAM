%YAML:1.0

# Camera Parameters.
#===================
# If monocular, stereo or RGBD. If your input is unrectified distorted stereo, pinhole and radtan are not supported.
Calibration.model: "RadTan"  # RadTan, Atan, Pinhole, EquiDistant, KannalaBrandt

Input.width: 752
Input.height: 480

Calib.process: "useK" #crop, none, useK

#only used if crop, useK or when stereo images are not rectified (Stereo.State = Rectify)
Output.width: 640
Output.height: 480

# Left or monocular Camera calibration and distortion parameters
CameraL.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: f
   data:[458.654, 0.0, 367.215, 0.0, 457.296, 248.375, 0.0, 0.0, 1.0]

#only used if Calibration model is equidistant, radtan, kannalabrandt
CameraL.distM: !!opencv-matrix
   rows: 1
   cols: 5
   dt: f
   data:[-0.28340811, 0.07395907, 0.00019359, 1.76187114e-05, 0.0]

#only used if calibration model is Atan (straight lines have to be straight)
CameraL.dist: 0.933271000000000 

#only used if calib.process is useK
Calib.desiK: !!opencv-matrix
   rows: 1
   cols: 4
   dt: f
   data:[0.6, 0.9, 0.5, 0.5] #fx fy cx cy (relative wrt width and height)


#-------------------------------------------
# this is enough information for monocular.
#-------------------------------------------

#If stereo:
#==========

# Stereo Images state. If previously rectified no need to rectify on the fly otherwise use rectify
Stereo.State: "rectify" #rectify or prerectified

# stereo baseline times fx
Stereo.bf: 47.90639384423901

#if Stereo.State is set to Rectify, stereo calibration data is required:
#--------------------------------------------------------------------------------------------
# Stereo Rectification. Only if you need to rectify the images.
#--------------------------------------------------------------------------------------------
CameraL.R: !!opencv-matrix
   rows: 3
   cols: 3
   dt: f
   data: [0.999966347530033, -0.001422739138722922, 0.008079580483432283, 0.001365741834644127, 0.9999741760894847, 0.007055629199258132, -0.008089410156878961, -0.007044357138835809, 0.9999424675829176]

CameraR.K: !!opencv-matrix
   rows: 3
   cols: 3
   dt: f
   data: [457.587, 0.0, 379.999, 0.0, 456.134, 255.238, 0.0, 0.0, 1]

CameraR.DistM: !!opencv-matrix
   rows: 1
   cols: 5
   dt: f
   data:[-0.28368365, 0.07451284, -0.00010473, -3.555907e-05, 0.0]

CameraR.R: !!opencv-matrix
   rows: 3
   cols: 3
   dt: f
   data: [0.9999633526194376, -0.003625811871560086, 0.007755443660172947, 0.003680398547259526, 0.9999684752771629, -0.007035845251224894, -0.007729688520722713, 0.007064130529506649, 0.999945173484644]

New.Intrin: !!opencv-matrix
   rows: 3
   cols: 4
   dt: f
   data: [435.2046959714599, 0, 367.4517211914062, 0,  0, 435.2046959714599, 252.2008514404297, 0,  0, 0, 1, 0]

